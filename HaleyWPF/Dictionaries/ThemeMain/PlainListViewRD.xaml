<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bc="clr-namespace:Haley.WPF.BaseControls"
    xmlns:hm="http://schemas.hpod9.com/haley/mvvm"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:ul="clr-namespace:Haley.Utils"
    xmlns:ml="clr-namespace:Haley.Models">
    
    <ResourceDictionary.MergedDictionaries>
        <ml:CommonDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/haleyBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="internal_plainlstvw_item" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- selected color irrespective of mouse over-->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{Binding Path=ItemSelectedColor, RelativeSource={RelativeSource AncestorType={x:Type bc:PlainListView}}}"/>
                        </Trigger>
                        
                        <!--Mouseover when selected is false-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{Binding Path=ItemHoverColor, RelativeSource={RelativeSource AncestorType={x:Type bc:PlainListView}}}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="internal_plainlstvw_itemspresenter" TargetType="{x:Type ItemsControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="{x:Type bc:PlainListView}">
        <Setter Property="Background" Value="{DynamicResource def_background_secondary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource def_border_brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource def_content}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemSelectedColor" Value="{DynamicResource def_button_hover}"/>
        <Setter Property="ItemHoverColor" Value="{DynamicResource def_button_hover}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:PlainListView}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                        <bc:FlexiScroll Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" EnableOverLay="False" AutoHide="True" VerticalScrollBarSize="20" HorizontalScrollBarSize="20">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </bc:FlexiScroll>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource internal_plainlstvw_item}"/>
        </Style.Resources>
    </Style>
</ResourceDictionary>
