<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hm="http://schemas.hpod9.com/haley/mvvm"
    xmlns:bc="clr-namespace:Haley.WPF.Controls"
    xmlns:ml="clr-namespace:Haley.Models">
    
    <ResourceDictionary.MergedDictionaries>
        <ml:CommonDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/internalBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type bc:ColorPickerButton}">
        <Setter Property="Background" Value="{DynamicResource def_background_secondary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource def_border_brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource def_content}"/>
        <Setter Property="ml:Hover.Background" Value="{DynamicResource def_button_hover}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Content" Value="Pick Color"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:ColorPickerButton}">
                    <Border x:Name="PART_BorderMain" Style="{StaticResource BorderWithShadow}">
                        <Grid x:Name="grdHolder" Margin="3" IsHitTestVisible="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding ElementName=grdHolder,Path=ActualHeight}"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Ellipse Margin="2" Fill="{TemplateBinding SelectedBrush}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                            <ContentPresenter Grid.Column="1" Margin="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=(ml:Hover.IsEnabled), RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_BorderMain" Property="Background" Value="{Binding Path=(ml:Hover.Background), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter TargetName="PART_BorderMain" Property="BorderBrush" Value="{Binding Path=(ml:Hover.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
