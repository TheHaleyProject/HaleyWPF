<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bc="clr-namespace:Haley.WPF.BaseControls"
    xmlns:utils="clr-namespace:Haley.Utils"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:model="clr-namespace:Haley.Models">
    
    <ResourceDictionary.MergedDictionaries>
        <model:CommonDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/haleyBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="interna_passwordbox_pbox" TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="VerticalAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="PasswordChar" Value="{Binding Path=PasswordChar, RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>

    <Style TargetType="{x:Type bc:PlainPasswordBox}">
        <Setter Property="Background" Value="{DynamicResource def_background_primary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource def_border_brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource def_content}"/>
        <Setter Property="DefaultImageColor" Value="{DynamicResource def_primary}"/>
        <Setter Property="HoverImageColor" Value="{DynamicResource def_secondary}"/>
        <Setter Property="ShadowColor" Value="{DynamicResource def_secondary}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="WaterMark" Value="Enter Password"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Height" Value="{StaticResource def_height}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:PlainPasswordBox}">
                    <Border Style="{StaticResource BorderWithShadow}" >
                        <Grid>
                            <Grid x:Name="grdPwdHolder">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="{Binding ElementName=grdPwdHolder, Path=ActualHeight}"/>
                                </Grid.ColumnDefinitions>
                                <PasswordBox  x:Name="PART_mainpwdbox" Style="{StaticResource interna_passwordbox_pbox}" Padding="3" Margin="4,0" IsTabStop="True" FocusManager.IsFocusScope="True"/>
                                <TextBlock x:Name="PART_pwdDisplay" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Padding="3" Margin="4,0" Visibility="Collapsed" Focusable="False"/>
                                <bc:ImageButton Grid.Column="1" Margin="5" DefaultImage="{StaticResource eye}" DefaultImageColor="{TemplateBinding DefaultImageColor}" HoverImageColor="{TemplateBinding HoverImageColor}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{x:Static utils:AdditionalCommands.Show}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <i:InvokeCommandAction Command="{x:Static utils:AdditionalCommands.Hide}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </bc:ImageButton>
                            </Grid>
                            <ContentControl x:Name="WaterMarkContent" Content="{TemplateBinding WaterMark}" Visibility="Collapsed" IsHitTestVisible="False" Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" IsTabStop="False"/>
                            
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="HasPassword" Value="false">
                            <Setter TargetName="WaterMarkContent" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <!--Below trigger is not working somehow. Only tabstop propery set directly is working at the moment.-->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="WaterMarkContent" Property="Visibility" Value="Collapsed"/>
                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_mainpwdbox}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsFocused, ElementName=PART_mainpwdbox}" Value="True">
                            <Setter TargetName="WaterMarkContent" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
