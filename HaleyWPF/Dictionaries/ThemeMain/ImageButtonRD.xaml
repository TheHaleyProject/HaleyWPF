<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hm="http://schemas.hpod9.com/haley/mvvm"
    xmlns:bc="clr-namespace:Haley.WPF.Controls"
    xmlns:ml="clr-namespace:Haley.Models">

    <ResourceDictionary.MergedDictionaries>
        <hm:CommonDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/haleyBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type bc:ImageButton}">
        <Setter Property="ml:Icon.DefaultColor" Value="{DynamicResource def_accent_primary}"/>
        <Setter Property="ml:Icon.HoverColor" Value="{DynamicResource def_accent_secondary}"/>
        <Setter Property="ml:Icon.PressedColor" Value="{DynamicResource def_accent_tertiary}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:ImageButton}">
                    <Border x:Name="PART_imageborder" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" BorderBrush="{Binding Path=(ml:Icon.DefaultColor), RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="{Binding Path=CornerRadius,RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
                        <Image x:Name="PART_ImageHolder" Source="{Binding Path=(ml:Icon.Default), RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill" StretchDirection="Both" Margin="2" SnapsToDevicePixels="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"  Value="True" />
                                <!--NOTE: WE ARE USING TEMPLATED PARENT'S DISABLE HOVER-->
                                <Condition Binding="{Binding Path=(ml:Hover.IsEnabled), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_ImageHolder" Property="Source" Value="{Binding Path=(ml:Icon.Hover), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter TargetName="PART_imageborder" Property="BorderBrush" Value="{Binding Path=(ml:Icon.HoverColor), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ImageHolder" Property="Source" Value="{Binding Path=(ml:Icon.Pressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_imageborder" Property="BorderBrush" Value="{Binding Path=(ml:Icon.PressedColor), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
