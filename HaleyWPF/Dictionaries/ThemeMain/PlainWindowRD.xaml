<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:bc="clr-namespace:Haley.WPF.Controls"
    xmlns:hm="http://schemas.hpod9.com/haley/mvvm"
    xmlns:ul="clr-namespace:Haley.Utils"
    xmlns:ml="clr-namespace:Haley.Models">

    <ResourceDictionary.MergedDictionaries>
        <hm:CommonDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/internalBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="internal_plainwndw_ctrlbx_btns" TargetType="{x:Type bc:ImageButton}">
        <Setter Property="ml:Icon.DefaultColor" Value="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=(ml:Icon.DefaultColor)}"/>
        <Setter Property="ml:Icon.HoverColor" Value="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=(ml:Icon.HoverColor)}"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="internal_plainwnw_btnBase" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type bc:PlainWindow}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Background" Value="{DynamicResource def_background_primary}"/>
        <Setter Property="ml:Icon.DefaultColor" Value="{DynamicResource def_content}"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:PlainWindow}">
                    <!--#region INTERNAL RESOURCES-->
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <DataTemplate x:Key="defaultHeaderTemplate">
                                <Grid x:Name="grdDefaultHeader" Margin="15,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <!--Binding to attached properties inside the data template throws interna parser exception. Try to use style and set here.-->
                                    <!--<bc:PlainImage Style="{StaticResource interal_plainwnw_header_image}" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Margin="4"/>-->
                                    <TextBlock Grid.Column="1" Text="{Binding Title,RelativeSource={RelativeSource AncestorType={x:Type bc:PlainWindow}}}"  HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="11"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate x:Key="internal_controlboxWindows">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <bc:ImageButton x:Name="PART_minimize"  ml:Icon.Default="{StaticResource line}"  Style="{StaticResource internal_plainwndw_ctrlbx_btns}" Command="{x:Static ul:AdditionalCommands.Minimize}" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideMinimizeButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}"/>
                                    <bc:ImageButton x:Name="PART_maximize" Grid.Column="1"  ml:Icon.Default="{StaticResource box}" Style="{StaticResource internal_plainwndw_ctrlbx_btns}"  Command="{x:Static ul:AdditionalCommands.Maximize}" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideMaximizeButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}"/>
                                    <bc:ImageButton x:Name="PART_close" Grid.Column="2"  ml:Icon.Default="{StaticResource close_circle}" Style="{StaticResource internal_plainwndw_ctrlbx_btns}" Command="{x:Static ul:AdditionalCommands.Close}" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideCloseButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}"/>  
                                </Grid>
                            </DataTemplate>
                            <DataTemplate x:Key="internal_controlboxMac">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_minimize"  Style="{StaticResource internal_plainwnw_btnBase}" Command="{x:Static ul:AdditionalCommands.Minimize}" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideMinimizeButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}" IsHitTestVisible="True" ToolTip="Minimize">
                                        <Viewbox Margin="3">
                                            <Ellipse Height="10" Width="10" Fill="#FFCAD728" Stroke="#FFC7C0C0" StrokeThickness="0.5"/>
                                        </Viewbox>
                                    </Button>
                                    <Button x:Name="PART_maximize" Grid.Column="1" Style="{StaticResource internal_plainwnw_btnBase}" Command="{x:Static ul:AdditionalCommands.Maximize}" IsHitTestVisible="True" ToolTip="Maximize" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideMaximizeButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}">
                                        <Viewbox Margin="3">
                                            <Ellipse Height="10" Width="10" Fill="#FF2CCB22" Stroke="#FFC7C0C0" StrokeThickness="0.5"/>
                                        </Viewbox>
                                    </Button>
                                    <Button x:Name="PART_close" Grid.Column="2" Style="{StaticResource internal_plainwnw_btnBase}" Command="{x:Static ul:AdditionalCommands.Close}" IsHitTestVisible="True" ToolTip="Close" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideCloseButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}">
                                        <Viewbox Margin="3">
                                            <Ellipse Height="10" Width="10" Fill="#FFC5671F" Stroke="#FFC7C0C0" StrokeThickness="0.5"/>
                                        </Viewbox>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <!--#endregion-->
                    <Grid >
                        <!--SHADOW BACKGROUND-->
                        <Border x:Name="shadowBG" Background="#02FFFFFF" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="#4C938F8F" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="{TemplateBinding Margin}" >
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="4" ShadowDepth="0" Color="Black"/>
                            </Border.Effect>
                        </Border>

                        <!--Actual content-->
                        <Border x:Name="PART_OverallBorder" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="{TemplateBinding Margin}">
                            <i:Interaction.Behaviors>
                                <ml:BorderClipper EnableClip="{Binding ClipBorder,RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}" Radius="{Binding CornerRadius,RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                            </i:Interaction.Behaviors>
                            
                            <Grid>
                                <!-- Among the below children we need to have the control box on top of everything. Drag move area could be bottom most one.-->
                                <Border x:Name="PART_dragemoveArea" Margin="0" Padding="0" Background="Transparent" Height="{Binding RelativeSource={RelativeSource TemplatedParent},Path=HeaderHeight}" VerticalAlignment="Top" Panel.ZIndex="998" IsHitTestVisible="True">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{x:Static ul:PlainWindowCommands.WindowDragMove}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Border>

                                <Grid Panel.ZIndex="997">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <!--Header (can be hidden)-->
                                    <ContentControl x:Name="PART_header" IsHitTestVisible="True" Height="{Binding RelativeSource={RelativeSource TemplatedParent},Path=HeaderHeight}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},Path=HideHeader,Converter={StaticResource BooltoVisibiliy},ConverterParameter=1}"/>

                                    <!--Footer (Can be hidden)-->
                                    <Border x:Name="PART_footer_holder" Grid.Row="2" Height="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FooterHeight}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},Path=HideFooter,Converter={StaticResource BooltoVisibiliy},ConverterParameter=1}">
                                        <ContentControl x:Name="PART_footer"/>
                                    </Border>

                                    <!--Content Presenter (should lie on top of everything, including the drag move area)-->
                                    <!-- Anyhow the content presenter is overlaid at top of the grid children (with in this grid). However, we also set the zindex to 999 so that we donot forget in future. -->
                                    <ContentPresenter x:Name="PART_mainContent" Grid.Row="1" Margin="0" IsHitTestVisible="True"/>
                                </Grid>

                                <!--Control box (totally outside the header grid. We also set the zindex so that it remains the top most.)-->
                                <Grid x:Name="PART_controlbox_holder" VerticalAlignment="Top" Height="27" Margin="10,4" HorizontalAlignment="Right" Background="Transparent"  IsHitTestVisible="True" Panel.ZIndex="999">
                                    <ContentControl x:Name="PART_controlbox" IsHitTestVisible="True"/>
                                </Grid>
                            </Grid>

                        </Border>
                    </Grid>
                        
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
