<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:bc="clr-namespace:Haley.WPF.Controls"
    xmlns:ul="clr-namespace:Haley.Utils"
    xmlns:ml="clr-namespace:Haley.Models">

    <ResourceDictionary.MergedDictionaries>
        <ml:CommonDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/haleyBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="internal_plainwndw_ctrlbx_btns" TargetType="{x:Type bc:ImageButton}">
        <Setter Property="ml:Icon.DefaultColor" Value="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=(ml:Icon.DefaultColor)}"/>
        <Setter Property="ml:Icon.HoverColor" Value="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=(ml:Icon.HoverColor)}"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
    </Style>

    <Style x:Key="internal_plainwnw_btnBase" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type bc:PlainWindow}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="#99888D90"/>
        <!--Border thickness below should match the resizeborder and glass frame thickness of the window chrome (that we have set for resizing. Check the plainwindow implementation)-->
        <Setter Property="BorderThickness" Value="6"/>
        <Setter Property="ml:Icon.DefaultColor" Value="White"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:PlainWindow}">
                    <!--#region INTERNAL RESOURCES-->
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <DataTemplate x:Key="defaultHeaderTemplate">
                                <Grid x:Name="grdDefaultHeader">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <!--Binding to attached properties inside the data template throws interna parser exception. Try to use style and set here.-->
                                    <!--<bc:PlainImage Style="{StaticResource interal_plainwnw_header_image}" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Margin="4"/>-->
                                    <TextBlock Grid.Column="1" Text="{Binding Title,RelativeSource={RelativeSource AncestorType={x:Type bc:PlainWindow}}}"  HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="11"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate x:Key="internal_controlboxWindows">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <bc:ImageButton x:Name="PART_minimize"  ml:Icon.Default="{StaticResource line}"  Style="{StaticResource internal_plainwndw_ctrlbx_btns}" Command="{x:Static ul:AdditionalCommands.Minimize}" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideMinimizeButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}"/>
                                    <bc:ImageButton x:Name="PART_maximize" Grid.Column="1"  ml:Icon.Default="{StaticResource box}" Style="{StaticResource internal_plainwndw_ctrlbx_btns}"  Command="{x:Static ul:AdditionalCommands.Maximize}" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideMaximizeButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}"/>
                                    <bc:ImageButton x:Name="PART_close" Grid.Column="2"  ml:Icon.Default="{StaticResource close_circle}" Style="{StaticResource internal_plainwndw_ctrlbx_btns}" Command="{x:Static ul:AdditionalCommands.Close}" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideCloseButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate x:Key="internal_controlboxMac">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_minimize"  Style="{StaticResource internal_plainwnw_btnBase}" Command="{x:Static ul:AdditionalCommands.Minimize}" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideMinimizeButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}" IsHitTestVisible="True" ToolTip="Minimize">
                                        <Viewbox Margin="3">
                                            <Ellipse Height="10" Width="10" Fill="#FFCAD728" Stroke="#FFC7C0C0" StrokeThickness="0.5"/>
                                        </Viewbox>
                                    </Button>
                                    <Button x:Name="PART_maximize" Grid.Column="1" Style="{StaticResource internal_plainwnw_btnBase}" Command="{x:Static ul:AdditionalCommands.Maximize}" IsHitTestVisible="True" ToolTip="Maximize" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideMaximizeButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}">
                                        <Viewbox Margin="3">
                                            <Ellipse Height="10" Width="10" Fill="#FF2CCB22" Stroke="#FFC7C0C0" StrokeThickness="0.5"/>
                                        </Viewbox>
                                    </Button>
                                    <Button x:Name="PART_close" Grid.Column="2" Style="{StaticResource internal_plainwnw_btnBase}" Command="{x:Static ul:AdditionalCommands.Close}" IsHitTestVisible="True" ToolTip="Close" Visibility="{Binding RelativeSource={RelativeSource AncestorType=bc:PlainWindow},Path=HideCloseButton,Converter={StaticResource BooltoVisibiliy}, ConverterParameter=1}">
                                        <Viewbox Margin="3">
                                            <Ellipse Height="10" Width="10" Fill="#FFC5671F" Stroke="#FFC7C0C0" StrokeThickness="0.5"/>
                                        </Viewbox>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <!--#endregion-->
                    
                        <Border Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Effect>
                                <DropShadowEffect BlurRadius="6" ShadowDepth="0"/>
                            </Border.Effect>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{Binding RelativeSource={RelativeSource TemplatedParent},Path=HeaderHeight}"/>
                                    <RowDefinition />
                                <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!--Header (can be hidden)-->
                                <Border x:Name="PART_header_holder" Margin="0" Padding="0" IsHitTestVisible="True" Background="Transparent">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{x:Static ul:AdditionalCommands.WindowAction2}" CommandParameter="DragMove"  />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                    <!--User can decide to hit some buttons onheader. So always keep the test visible-->
                                <ContentControl x:Name="PART_header" Margin="5,0"/>
                            </Border>
                                
                            <!--Footer (Can be hidden)-->
                            <Border x:Name="PART_footer_holder" Grid.Row="2" Height="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FooterHeight}">
                                <ContentControl x:Name="PART_footer"/>
                            </Border>

                            <!--Control box-->
                            <Grid x:Name="PART_controlbox_holder" VerticalAlignment="Top" Height="27" Margin="8,4" HorizontalAlignment="Right" IsHitTestVisible="True" Background="Transparent">
                                <ContentControl x:Name="PART_controlbox" IsHitTestVisible="True"/>
                            </Grid>
                            
                              <!--Content Presenter-->
                            <ContentPresenter Grid.Row="1" Margin="0" IsHitTestVisible="True"/>
                            </Grid>
                        </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
