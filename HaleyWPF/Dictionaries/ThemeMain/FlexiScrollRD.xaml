<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bc="clr-namespace:Haley.WPF.BaseControls"
    xmlns:model="clr-namespace:Haley.Models">
    
    <ResourceDictionary.MergedDictionaries>
        <model:CommonDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/haleyBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Scrollbar Thumb-->
    <Style x:Key="internal_flexiscroll_thumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="{Binding Path=ScrollBarWidth, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
                        x:Name="thumb_border"
                        Background="{DynamicResource def_scroll_thumb}"
                        SnapsToDevicePixels="True">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="thumb_border" Value="{DynamicResource def_button_hover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Track Repeat Button-->
    <Style x:Key="internal_flexiscroll_trackrptBtns" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="{Binding Path=ScrollBarWidth, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
      
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{DynamicResource def_scroll_track}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  
    <!--MAIN REPEAT BUTTONS-->
    <Style x:Key="internal_flexiscroll_upLeft" TargetType="{x:Type bc:PlainRepeatButton}">
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="DefaultImage" Value="{StaticResource arrow_down_rounded}"/>
        <Setter Property="Background" Value="{DynamicResource def_scroll_repeat}"/>
        <Setter Property="Visibility" Value="{Binding Path=ShowRepeatButtons,Converter={StaticResource BooltoVisibiliy}, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
    </Style>

    <Style x:Key="internal_flexiscroll_downRight" TargetType="{x:Type bc:PlainRepeatButton}">
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="DefaultImage" Value="{StaticResource arrow_down_rounded}"/>
        <Setter Property="Background" Value="{DynamicResource def_scroll_repeat}"/>
        <Setter Property="Visibility" Value="{Binding Path=ShowRepeatButtons,Converter={StaticResource BooltoVisibiliy}, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
    </Style>
    
    <ControlTemplate x:Key="internal_flexi_verticalSbar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition x:Name="rowdef_01" Height="{Binding Path=ScrollBarWidth, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
                <RowDefinition Height="*"/>
                <RowDefinition x:Name="rowdef_02" Height="{Binding Path=ScrollBarWidth, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
            </Grid.RowDefinitions>
            <!--Actual Background Holder-->
            <Border
                    Grid.Row="1"
                    CornerRadius="3"
                    Margin="2"
                    Background="{DynamicResource def_scroll_track}">
            </Border>
            
            <!--Button Up-->
            <bc:PlainRepeatButton
                x:Name="btn_up"
                    Margin="2"
                    Command="{x:Static ScrollBar.LineUpCommand}"
                    Style="{StaticResource internal_flexiscroll_upLeft}">
            </bc:PlainRepeatButton>
            <!--Track-->
            <Track
                    Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                            Command="{x:Static ScrollBar.PageUpCommand}"
                            Style="{StaticResource internal_flexiscroll_trackrptBtns}"/>
                </Track.DecreaseRepeatButton>

                <!--Thumb-->
                <Track.Thumb>
                    <Thumb
                            Style="{StaticResource internal_flexiscroll_thumb}">
                    </Thumb>
                </Track.Thumb>

                <Track.IncreaseRepeatButton>
                    <RepeatButton
                            
                            Command="{x:Static ScrollBar.PageDownCommand}"
                            Style="{StaticResource internal_flexiscroll_trackrptBtns}"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <!--Button Down-->
            <bc:PlainRepeatButton
                    x:Name="btn_down"
                    Grid.Row="2"
                    Margin="2"
                    Command="{x:Static ScrollBar.LineDownCommand}"
                    Style="{StaticResource internal_flexiscroll_downRight}">
            </bc:PlainRepeatButton>
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}, Path=VerticalOffset}" Value="0">
                <Setter TargetName="btn_up" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource ScrollLimit}">
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type bc:FlexiScroll}}" Path="VerticalOffset"/>
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type bc:FlexiScroll}}" Path="ScrollableHeight"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="btn_down" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}, Path=ShowRepeatButtons}" Value="false">
                <Setter TargetName="rowdef_01" Property="Height" Value="Auto"/>
                <Setter TargetName="rowdef_02" Property="Height" Value="Auto"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ScrollBar-->
    <Style x:Key="internal_flexiscroll_scrollbar" TargetType="ScrollBar">
        <Setter Property="SnapsToDevicePixels"
                    Value="True"/>
        <Setter Property="OverridesDefaultStyle"
                    Value="True"/>
        <Setter Property="Template" Value="{StaticResource internal_flexi_verticalSbar}"/>
        <!--<Style.Triggers>
            <Trigger Property="Orientation"
                         Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource internal_flexi_horizontalSbar}"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style TargetType="{x:Type bc:FlexiScroll}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:FlexiScroll}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"  CanContentScroll="{TemplateBinding CanContentScroll}"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource internal_flexiscroll_scrollbar}" AutomationProperties.AutomationId="VerticalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <!--<ScrollBar x:Name="PART_HorizontalScrollBar" Opacity="0" Style="{StaticResource ScrollBarBaseStyle}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
