<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bc="clr-namespace:Haley.WPF.BaseControls"
    xmlns:model="clr-namespace:Haley.Models">

    <ResourceDictionary.MergedDictionaries>
        <model:CommonDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/haleyBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region REPEAT BUTTONS AND THUMB-->
    <!--Thumb-->
    <Style x:Key="internal_flexiscroll_thumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="thumb_border" Background="{DynamicResource def_scroll_thumb}" SnapsToDevicePixels="True" CornerRadius="3"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="thumb_border" Value="{DynamicResource def_button_hover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Track Repeat Button-->
    <Style x:Key="internal_flexiscroll_trackrptBtns" TargetType="{x:Type bc:PlainRepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Content" Value="{x:Null}"/>
        <Setter Property="DisableHover" Value="True"/>
        <Setter Property="PressedBackground" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!--MAIN REPEAT BUTTONS-->
    <Style x:Key="internal_flexiscroll_mainrepeat_base" TargetType="{x:Type bc:ImageComboRepeatButton}">
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="DefaultImage" Value="{StaticResource arrow_down_rounded}"/>
        <Setter Property="Background" Value="{DynamicResource def_scroll_repeat}"/>
        <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
        <Setter Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
        <Setter Property="Margin" Value="2"/>
    </Style>
    
    <Style x:Key="internal_flexiscroll_up" TargetType="{x:Type bc:ImageComboRepeatButton}" BasedOn="{StaticResource internal_flexiscroll_mainrepeat_base}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <RotateTransform Angle="180"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="internal_flexiscroll_Left" TargetType="{x:Type bc:ImageComboRepeatButton}" BasedOn="{StaticResource internal_flexiscroll_mainrepeat_base}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <RotateTransform Angle="90"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="internal_flexiscroll_right" TargetType="{x:Type bc:ImageComboRepeatButton}" BasedOn="{StaticResource internal_flexiscroll_mainrepeat_base}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <RotateTransform Angle="-90"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="internal_flexiscroll_down" TargetType="{x:Type bc:ImageComboRepeatButton}" BasedOn="{StaticResource internal_flexiscroll_mainrepeat_base}"/>
    
    <!--#endregion-->
    
  <!--#region SCROLL BARS-->
    <ControlTemplate x:Key="internal_flexi_verticalSbar" TargetType="{x:Type ScrollBar}">
        <Grid Width="{Binding Path=VerticalScrollBarSize, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}">
            <Grid.RowDefinitions>
                <RowDefinition x:Name="rowdef_01" Height="{Binding Path=VerticalScrollBarSize, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
                <RowDefinition Height="*"/>
                <RowDefinition x:Name="rowdef_02" Height="{Binding Path=VerticalScrollBarSize, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
            </Grid.RowDefinitions>
            <!--Actual Background Holder-->
            <Border Grid.Row="1" CornerRadius="3" Margin="2" Background="{DynamicResource def_scroll_track}"/>
            <!--Button Up-->
            <bc:ImageComboRepeatButton x:Name="btn_upleft" Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource internal_flexiscroll_up}" Visibility="{Binding Path=ShowVerticalButtons,Converter={StaticResource BooltoVisibiliy}, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
            <!--Track-->
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <bc:PlainRepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource internal_flexiscroll_trackrptBtns}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource internal_flexiscroll_thumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <bc:PlainRepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource internal_flexiscroll_trackrptBtns}"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <!--Button Down-->
            <bc:ImageComboRepeatButton x:Name="btn_downright" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" Style="{StaticResource internal_flexiscroll_down}" Visibility="{Binding Path=ShowVerticalButtons,Converter={StaticResource BooltoVisibiliy}, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}, Path=VerticalOffset}" Value="0">
                <Setter TargetName="btn_upleft" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource ScrollLimit}">
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type bc:FlexiScroll}}" Path="VerticalOffset"/>
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type bc:FlexiScroll}}" Path="ScrollableHeight"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="btn_downright" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}, Path=ShowVerticalButtons}" Value="false">
                <Setter TargetName="rowdef_01" Property="Height" Value="Auto"/>
                <Setter TargetName="rowdef_02" Property="Height" Value="Auto"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="internal_flexi_horizontalSbar" TargetType="{x:Type ScrollBar}">
        <Grid Height="{Binding Path=HorizontalScrollBarSize, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="coldef_01" Width="{Binding Path=HorizontalScrollBarSize, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition x:Name="coldef_02" Width="{Binding Path=HorizontalScrollBarSize, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
            </Grid.ColumnDefinitions>
            <!--Actual Background Holder-->
            <Border Grid.Column="1" CornerRadius="3" Margin="2" Background="{DynamicResource def_scroll_track}"/>
            <!--Button Up-->
            <bc:ImageComboRepeatButton x:Name="btn_upleft" Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource internal_flexiscroll_Left}" Visibility="{Binding Path=ShowHorizontalButtons,Converter={StaticResource BooltoVisibiliy}, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
            <!--Track-->
            <Track Name="PART_Track" Grid.Column="1" >
                <Track.DecreaseRepeatButton>
                    <bc:PlainRepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource internal_flexiscroll_trackrptBtns}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource internal_flexiscroll_thumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <bc:PlainRepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource internal_flexiscroll_trackrptBtns}"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <!--Button Down-->
            <bc:ImageComboRepeatButton x:Name="btn_downright" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource internal_flexiscroll_right}" Visibility="{Binding Path=ShowHorizontalButtons,Converter={StaticResource BooltoVisibiliy}, RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}, Path=HorizontalOffset}" Value="0">
                <Setter TargetName="btn_upleft" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource ScrollLimit}">
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type bc:FlexiScroll}}" Path="HorizontalOffset"/>
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type bc:FlexiScroll}}" Path="ScrollableWidth"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="btn_downright" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type bc:FlexiScroll}}, Path=ShowHorizontalButtons}" Value="false">
                <Setter TargetName="coldef_01" Property="Width" Value="Auto"/>
                <Setter TargetName="coldef_02" Property="Width" Value="Auto"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

  
    <Style x:Key="internal_flexiscroll_scrollbar" TargetType="ScrollBar">
        <Setter Property="SnapsToDevicePixels"
                    Value="True"/>
        <Setter Property="OverridesDefaultStyle"
                    Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation"
                         Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource internal_flexi_horizontalSbar}"/>
            </Trigger>
            <Trigger Property="Orientation"
                         Value="Vertical">
                <Setter Property="Template" Value="{StaticResource internal_flexi_verticalSbar}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <Style TargetType="{x:Type bc:FlexiScroll}">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource def_border_brush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:FlexiScroll}">
                    <Grid x:Name="PART_root" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"  CanContentScroll="{TemplateBinding CanContentScroll}"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource internal_flexiscroll_scrollbar}" AutomationProperties.AutomationId="VerticalScrollBar"  Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Grid.Row="0" Grid.Column="1" Orientation="Vertical"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource internal_flexiscroll_scrollbar}" AutomationProperties.AutomationId="HorizontalScrollBar"  Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal"  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Grid.Row="1" Grid.Column="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="EnableOverLay" Value="True">
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.ColumnSpan" Value="2"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_VerticalScrollBar,Path=IsMouseOver}" Value="False"/>
                                <Condition Binding="{Binding AutoHide, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="VerticalScrollBarSize" Value="10.0"/>
                            <Setter Property="ShowVerticalButtons" Value="False"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_HorizontalScrollBar,Path=IsMouseOver}" Value="False"/>
                                <Condition Binding="{Binding AutoHide, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="HorizontalScrollBarSize" Value="10.0"/>
                            <Setter Property="ShowHorizontalButtons" Value="False"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
