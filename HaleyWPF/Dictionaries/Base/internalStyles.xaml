<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:bc="clr-namespace:Haley.WPF.Controls"
    xmlns:ml="clr-namespace:Haley.Models"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="internal_mapping_flexiscroll" TargetType="{x:Type bc:FlexiScroll}">
        <Setter Property="VerticalScrollBarVisibility" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.VerticalBarVisibility)}"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.HorizontalBarVisibility)}"/>
        <Setter Property="AutoHide" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.AutoHide)}"/>
        <Setter Property="EnableOverLay" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.EnableOverLay)}"/>
        <Setter Property="VerticalScrollBarSize" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.VerticalBarSize)}"/>
        <Setter Property="HorizontalScrollBarSize" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.HorizontalBarSize)}"/>
        <Setter Property="ShowHorizontalButtons" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.ShowButtons)}"/>
        <Setter Property="ShowVerticalButtons" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.ShowButtons)}"/>
        <Setter Property="TrackBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.TrackBackground)}"/>
        <Setter Property="RepeatBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.RepeatBackground)}"/>
        <Setter Property="ThumbBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:FlexiScrollViewer.ThumbBackground)}"/>
    </Style>

    <Style x:Key="internal_mapping_plainimage" TargetType="{x:Type bc:PlainImage}">
        <Setter Property="ml:Icon.Default" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.Default)}"/>
        <Setter Property="ml:Icon.DefaultColor" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.DefaultColor)}"/>
        <Setter Property="ml:Icon.DefaultKind" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.DefaultKind)}"/>
        <Setter Property="ml:Icon.DisableColorChange" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.DisableColorChange)}"/>
        <Setter Property="ml:Icon.Hover" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.Hover)}"/>
        <Setter Property="ml:Icon.HoverColor" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.HoverColor)}"/>
        <Setter Property="ml:Icon.HoverKind" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.HoverKind)}"/>
        <Setter Property="ml:Icon.Preference" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.Preference)}"/>
        <!--<Setter Property="ml:Icon.Pressed" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.Pressed)}"/>
        <Setter Property="ml:Icon.PressedKind" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.PressedKind)}"/>-->
        <Setter Property="ml:Icon.RotateAngle" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Icon.RotateAngle)}"/>
        
        <Setter Property="ml:Hover.IsEnabled" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ml:Hover.IsEnabled)}"/>
    </Style>
    

</ResourceDictionary>
