<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bc="clr-namespace:Haley.WPF.BaseControls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/haleyBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

 <!--#region COMMON ITEMS-->
    
    <Style x:Key="internal_tglebtn_CommonBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource BorderWithShadow}">
        <Style.Triggers>
            <!--When Value is true-->
            <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=ColorON, RelativeSource={RelativeSource TemplatedParent}}"/>
            </DataTrigger>

            <!--When value is false-->
            <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource TemplatedParent}}" Value="{StaticResource False}">
                <Setter Property="Background" Value="{Binding Path=ColorOFF, RelativeSource={RelativeSource TemplatedParent}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="internal_tglebtn_txtblckStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <!--When Value is true-->
            <DataTrigger Binding="{Binding ShowText, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Text" Value="{Binding Path=OnText, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Grid.Column" Value="0"/>
            </DataTrigger>

            <!--When Value is false-->
            <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource TemplatedParent}}" Value="{StaticResource False}">
                <Setter Property="Text" Value="{Binding Path=OffText, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Grid.Column" Value="1"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="internal_tglebtn_switchbtn" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="2"/>
        <Style.Triggers>
            <!--When Value is true-->
            <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>

            <!--When value is false-->
            <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource TemplatedParent}}" Value="{StaticResource False}">
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding EnlargeSwitchButton, RelativeSource={RelativeSource TemplatedParent}}" Value="{StaticResource True}">
                <Setter Property="Margin" Value="-1"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

</ResourceDictionary>
