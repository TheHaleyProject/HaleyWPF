<Window
    x:Class="WPF.Test.TestWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:beh="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:v4="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
    xmlns:hm="http://schemas.hpod9.com/haley/mvvm"
    xmlns:hw="http://schemas.hpod9.com/haley/wpf"
    xmlns:local="clr-namespace:WPF.Test"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Width="350"
    MinWidth="300"
    MinHeight="350"
    mc:Ignorable="d"
    Title="TestWindow" SizeToContent="Height" DataContext="{}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            </ResourceDictionary.MergedDictionaries>
            <DrawingBrush TileMode="Tile" Viewport="0, 0, 20,20" ViewportUnits="Absolute" x:Key="checkerBox">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="LightGray">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0, 0, 5, 5"/>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing Brush="LightGray">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="5, 5, 5, 5"/>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>

            <Style TargetType="{x:Type Label}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="#FF525151"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type Slider}">
                <Setter Property="Foreground" Value="Green"/>
                <Setter Property="IsSnapToTickEnabled" Value="True"/>
                <Setter Property="Margin" Value="4,2"/>
                <Setter Property="Minimum" Value="0"/>
                <Setter Property="Maximum" Value="255"/>
                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="TickFrequency" Value="1"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type hw:PlainTextBox}">
                <Setter Property="Margin" Value="1"/>
                <Setter Property="CornerRadius" Value="4"/>
                <Setter Property="Foreground" Value="#FF525151"/>
                <Setter Property="hm:InputAP.AllowNegative" Value="False"/>
                <Setter Property="hm:InputAP.Constraint" Value="Integer"/>
                <Setter Property="WaterMark" Value=""/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition MinHeight="250" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="5" />
            </Grid.ColumnDefinitions>
            <Grid Margin="4" Background="Black">
                <Rectangle x:Name="SLRectangle" Stroke="Gray">
                    <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Offset="1" Color="{Binding SelectedHueColor, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}}}" />
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                    <Rectangle.OpacityMask>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="White" />
                            <!--Since we cannot have two colors overlap each other. We use the transparency technique. We keep a black color background and the gradient white to transparent is like white to black.-->
                            <GradientStop Offset="1" Color="Transparent" />
                        </LinearGradientBrush>
                    </Rectangle.OpacityMask>

                </Rectangle>
            </Grid>
            <Rectangle x:Name="HueRectangle"
                Grid.Column="2"
                Margin="5.2,7,3.2,0.6"
                RenderTransformOrigin="1,0"
                Stroke="Gray">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" x:Name="HueRectangleGradients">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="Red" />
                            <GradientStop Offset="0.1667" Color="Yellow" />
                            <GradientStop Offset="0.3333333" Color="Lime" />
                            <GradientStop Offset="0.5" Color="Cyan" />
                            <GradientStop Offset="0.6666666666" Color="Blue" />
                            <GradientStop Offset="0.83333" Color="Magenta" />
                            <GradientStop Offset="1" Color="Red" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Grid>
        <Grid Grid.Row="1" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="35"/>
                <RowDefinition MinHeight="35"/>
                <RowDefinition MinHeight="35"/>
                <RowDefinition MinHeight="35"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25" />
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>

            <Label Content="R" />
            <Label Grid.Row="1" Content="G" />
            <Label Grid.Row="2" Content="B" />
            <Label Grid.Row="3" Content="A"/>

            <Slider
                x:Name="sliderR"
                Grid.Column="1"
                Maximum="255"
                Minimum="0"
                Orientation="Horizontal"
                TickFrequency="1" Value="{Binding RedComponent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}}}"/>
            <Slider
                x:Name="sliderG"
                Grid.Row="1"
                Grid.Column="1" Value="{Binding GreenComponent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}}}"/>
            <Slider
                x:Name="sliderB"
                Grid.Row="2"
                Grid.Column="1" Value="{Binding BlueComponent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}}}"/>
            <Slider
                x:Name="sliderA"
                Grid.Row="3"
                Grid.Column="1" Value="{Binding Alpha, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}}}"/>

            <hw:PlainTextBox
                Grid.Column="2"
                Text="{Binding ElementName=sliderR,Path=Value,UpdateSourceTrigger=PropertyChanged}" >
               
                <beh:Interaction.Behaviors>
                    <hm:NumericLimiter MaxValue="255" />
                </beh:Interaction.Behaviors>
            </hw:PlainTextBox>
            <hw:PlainTextBox
                Grid.Row="1"
                Grid.Column="2"
                Text="{Binding ElementName=sliderG,Path=Value,UpdateSourceTrigger=PropertyChanged}" >
                <beh:Interaction.Behaviors>
                    <hm:NumericLimiter MaxValue="255" />
                </beh:Interaction.Behaviors>
            </hw:PlainTextBox>
            <hw:PlainTextBox
                Grid.Row="2"
                Grid.Column="2"
                Text="{Binding ElementName=sliderB,Path=Value,UpdateSourceTrigger=PropertyChanged}" >
                <beh:Interaction.Behaviors>
                    <hm:NumericLimiter MaxValue="255" />
                </beh:Interaction.Behaviors>
            </hw:PlainTextBox>
            <hw:PlainTextBox
                Grid.Row="3"
                Grid.Column="2"
                Text="{Binding ElementName=sliderA,Path=Value,UpdateSourceTrigger=PropertyChanged}">
                <beh:Interaction.Behaviors>
                    <hm:NumericLimiter MaxValue="255" />
                </beh:Interaction.Behaviors>
            </hw:PlainTextBox>
       
        </Grid>

        <Grid Grid.Row="2" Margin="4">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear All Favourites" Click="MenuItem_Click"/>
                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="#" VerticalAlignment="Center" Foreground="Gray"/>
                    <hw:PlainTextBox
                Text="{Binding HexComponent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}},UpdateSourceTrigger=PropertyChanged}" Width="60" Margin="2" TextAlignment="Center" HorizontalContentAlignment="Center" IsReadOnly="True" IsTabStop="False"/>
                    <hw:ImageButton Margin="3" hw:Icon.Default="{StaticResource favourite}" Height="23" Width="23" ToolTip="Add selected color to favourites." Click="ImageButton_Click" hw:Icon.DefaultColor="#FF545454" />
                </StackPanel>
                <hw:ImageButton Margin="3" hw:Icon.Default="{StaticResource dustbin}" Height="23" Width="23" ToolTip="Delete last stored favourite color" Click="deleteLatestClick" Grid.Column="1" hw:Icon.DefaultColor="Gray"/>
            </Grid>
           
            <TextBlock Grid.Row="1"
                MaxHeight="90" Text="{Binding ErrorMessage, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}},UpdateSourceTrigger=PropertyChanged}" Foreground="Crimson" FontSize="9" TextWrapping="Wrap">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
        <Grid Grid.Row="3" Margin="4">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear All Favourites" Click="MenuItem_Click"/>
                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border
                Margin="3"
                BorderBrush="#FF5F5E5E"
                BorderThickness="1"
                CornerRadius="10">
                <Grid Width="70" MinHeight="55">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Background="{StaticResource checkerBox}" CornerRadius="10,10,0,0"/>
                    <Border Background="{Binding SelectedBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}}}" CornerRadius="10,10,0,0" />
                    <Border Background="{StaticResource checkerBox}" CornerRadius="0,0,10,10" Grid.Row="1"/>
                    <Border
                        Grid.Row="1"
                        Background="{Binding OldBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}}}"
                        CornerRadius="0,0,10,10">
                        <TextBlock
                            Margin="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Background="#66090909"
                            FontSize="9"
                            Foreground="#B2FFFFFF"
                            Text="OLD" />
                    </Border>
                </Grid>
            </Border>
            <Grid Grid.Column="1">
                <Grid.Resources>
                    <ResourceDictionary>
                        <Style TargetType="{x:Type Ellipse}">
                            <Setter Property="Margin" Value="2"/>
                            <Setter Property="Stroke" Value="#FF6B6464"/>
                            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}"/>
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <hw:PlainListView x:Name="lstCommonColors"
                    Height="30"
                    Margin="3"
                    BorderBrush="{x:Null}" BorderThickness="0" ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ItemHoverColor="Transparent" Background="{x:Null}" ItemSelectedColor="Transparent">
                    <hw:PlainListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </hw:PlainListView.ItemsPanel>
                    <hw:PlainListView.ItemTemplate>
                        <DataTemplate>
                            <hw:PlainButton Height="22" Width="22" CornerRadius="11" BorderBrush="Gray" Background="{Binding Converter={StaticResource ColorToBrush}}" Content="" Margin="2,0" hw:Hover.IsEnabled="False" BorderThickness="1"/>
                        </DataTemplate>
                    </hw:PlainListView.ItemTemplate>
                </hw:PlainListView>

                <hw:PlainListView x:Name="lstStoredColors"
                    Grid.Row="1"
                    Height="35"
                    Margin="3"
                    BorderBrush="{x:Null}" BorderThickness="0" ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto" ItemHoverColor="Transparent" Background="{x:Null}" ItemSelectedColor="Transparent" ItemsSource="{Binding SavedColors, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TestWindow}},UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}">
                    <hw:PlainListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </hw:PlainListView.ItemsPanel>
                    <hw:PlainListView.ItemTemplate>
                        <DataTemplate>
                            <hw:PlainButton Height="22" Width="22" CornerRadius="11" BorderBrush="Gray" Background="{Binding Converter={StaticResource ColorToBrush}}" Content="" Margin="2,0" hw:Hover.IsEnabled="False" BorderThickness="1" VerticalAlignment="Top">
                            </hw:PlainButton>
                        </DataTemplate>
                    </hw:PlainListView.ItemTemplate>
                </hw:PlainListView>
            </Grid>
        </Grid>
    </Grid>

</Window>