name: master

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '.github/workflows/**.yml'
  #pull_request:
    #branches: [ master ]
    #paths-ignore:
      #- '**.md'
      #- '.github/workflows/**.yml'

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  

    env:
      Solution_Name: HaleyWPF.sln                         

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core [latest version is 5.0.x]
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x #

    # Add  MSBuild 
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@2008f912f56e61277eefaac6d1888b750582aa16
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

    #NO UNIT TESTS FOR WPF AT THE MOMENT

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

  publish:
    needs: build # So build is first executed
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  

    env:
      Solution_Name: HaleyWPF.sln                         

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    #Extract Branch Name
    #- name: Extract branch name
    #  shell: bash
    #  run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
    #  id: extract_branch

    #Publish to Nuget
    - name: Publish to NuGet
      uses: brandedoutcast/publish-nuget@v2
     # if: ${{ steps.extract_branch.outputs.branch }} = master
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      with:
        PROJECT_FILE_PATH: HaleyWPF/HaleyWPF.csproj
        VERSION_REGEX: '^\s*<Version>(.*)<\/Version>\s*$'
        TAG_FORMAT: '*'
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        INCLUDE_SYMBOLS: 'true'
